//s[i] == p[j],vv[i][j] = vv[i - 1][j - 1] + 1;
//s[i] != p[j],vv[i][j] = max(vv[i - 1][j], vv[i][j - 1]);
string getSameSub(string str1, string str2)
{
	int m = str1.size();
	int n = str2.size();
	int maxSize = 0;
	int	i, j;
	vector<vector<int> >vv(m, vector<int>(n));
	for (i = 0; i < m; i++)
	{
		for (j = 0; j < n; j++)
		{
			if (str1[i] == str2[j])
				vv[i][j] = ((i > 0 && j > 0) ? vv[i - 1][j - 1] : 0) + 1;
			else
				vv[i][j] = max(i > 0 ? vv[i - 1][j] : 0, j > 0 ? vv[i][j - 1] : 0);

		}
	}
	maxSize = vv[m - 1][n - 1];

	string res;
	for (i = m - 1; i >= 0; i--)
	{
		for (j = n - 1; j >= 0; j--)
		{
			if (vv[i][j] == maxSize && str1[i] == str2[j])
			{
				res = str1[i] +res;
				maxSize--;
				break;
			}
		}
		if (maxSize == 0)
			break;
	}
	return res;
}

//s[i] == p[j],vv[i][j] = vv[i - 1][j - 1] + 1;
//s[i] != p[j],vv[i][j] = 0;
string getSameStr(string str1, string str2)
{
	int m = str1.size(), n = str2.size(), start, maxSize = 0, i, j;
	vector<vector<int> >vv(m, vector<int>(n));
	for (i = 0; i < m; i++)
	{
		for (j = 0; j < n; j++)
		{
			if (str1[i] == str2[j])
				vv[i][j] = ((i > 0 && j > 0) ? vv[i - 1][j - 1] : 0) + 1;
			else
				vv[i][j] = 0;
		}
	}
	for (i = 0; i < m; i++)
	{
		for (j = 0; j < n; j++)
		{
			if (vv[i][j] > maxSize)
			{
				maxSize = vv[i][j];
				start = i - maxSize + 1;
			}
		}
	}
	string res;
	for (i = 0; i < maxSize; i++)
		res = res+str1[start + i];
	return res;
}